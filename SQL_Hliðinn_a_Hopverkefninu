drop database if exists 3103972969_Hopverkefni;
create database 3103972969_Hopverkefni;
use 3103972969_Hopverkefni;

create table `User`
(
	`ID` INT NOT NULL AUTO_INCREMENT,
    `FullName` VARCHAR(150) NOT NULL,
	`UserName` CHAR(45) NOT NULL,
	`Email` VARCHAR(45) NOT NULL,
	`Phone` INT NULL,
	`Authorizationlevel` int NOT NULL,
    `PassWord` VARCHAR(45) NOT NULL,
    constraint User_PK primary key(ID)
);

create table `ShelfSystem`
(
	`ID` INT NOT NULL AUTO_INCREMENT,
	`Section` CHAR(5) NOT NULL,
	`Tower` INT NOT NULL,
	`Level` INT NOT NULL,
    `Row` INT NOT NULL,
    constraint ShelfSystem_PK primary key(ID)
);

create table `Items`
(
	`ID` INT(50) NOT NULL AUTO_INCREMENT,
    `ItemNumber` char(50) NOT NULL,
	`Name` CHAR(80) NOT NULL,
    `Description` CHAR(255) NULL,
	`SerialNumber` CHAR(11) NOT NULL,
	`By` CHAR(80) NOT NULL,
    `Owner` CHAR(80) NOT NULL,
    `amount` int NOT NULL,
    constraint Items_PK primary key(ID)
);

create table `ItemPlacement`
(
    `ID` INT NOT NULL AUTO_INCREMENT,
	`Amount` INT NOT NULL,
	`ShelfSystem_ID` INT NOT NULL,
	`Items_ID` int(50) NOT NULL,
    constraint ItemPlacement_PK primary key(ID),
	constraint ItemPlacement_Items_FK foreign key(Items_ID) references Items(ID),
    constraint ItemPlacement_ShelfSystem_FK foreign key(ShelfSystem_ID) references ShelfSystem(ID)
);

insert into `User` (`FullName` ,`UserName`,`Email`,`Phone`,`Authorizationlevel`,`PassWord`)values('Administrator' ,'admin','Admin@Scale2.com',5812345,1,'pass.123');
insert into `User` (`FullName` ,`UserName`,`Email`,`Phone`,`Authorizationlevel`,`PassWord`)values('Administrator' ,'admin2','Admin@Scale9.com',5812345,2,'pass.231');

insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 01, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 02, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 03, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 04, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 05, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 06, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 07, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 08, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 09, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 10, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 11, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 12, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 13, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 14, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 15, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 16, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 17, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 18, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 19, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('A', 20, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 01, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 02, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 03, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 04, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 05, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 06, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 07, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 08, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 09, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 10, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 11, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 12, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 13, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 14, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 15, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 16, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 17, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 18, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 19, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('B', 20, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 01, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 02, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 03, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 04, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 05, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 06, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 07, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 08, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 09, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 10, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 11, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 12, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 13, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 14, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 15, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 16, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 17, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 18, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 19, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('C', 20, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 01, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 02, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 03, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 04, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 05, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 06, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 07, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 08, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 09, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 10, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 11, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 12, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 13, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 14, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 15, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 16, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 17, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 18, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 19, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('D', 20, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 01, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 02, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 03, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 04, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 05, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 06, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 07, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 08, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 09, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 10, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 11, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 12, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 13, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 14, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 15, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 16, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 17, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 18, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 19, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('E', 20, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 01, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 02, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 03, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 04, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 05, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 06, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 07, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 08, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 09, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 10, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 11, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 12, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 13, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 14, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 15, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 16, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 17, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 18, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 19, 05, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 01, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 01, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 01, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 02, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 02, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 02, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 03, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 03, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 03, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 04, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 04, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 04, 03);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 05, 01);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 05, 02);
insert into ShelfSystem (`Section`, `Tower`, `Level`, `Row`) values('F', 20, 05, 03);

create table ItemHistory
(
    ItemHistoryID int not null auto_increment,
    TextInfo Varchar(100),
    timeOfRegistered time not null,
    DateOfRegistered date not null,
	`ItemNumber` char(50) NOT NULL,
	`Name` CHAR(80) NOT NULL,
    `Description` CHAR(255) NULL,
	`SerialNumber` CHAR(11) NOT NULL,
	`By` CHAR(80) NOT NULL,
    `Owner` CHAR(80) NOT NULL,
    `amount` int NOT NULL,
    `UserID` int,
    constraint ItemHistory_PK primary key(ItemHistoryID)
);

create table ItemPlacementHistory
(
    ItemPlacementHistoryID int not null auto_increment,
    TextInfo Varchar(100),
    timeOfRegistered time not null,
    DateOfRegistered date not null,
    `Amount` INT NOT NULL,
	`ShelfSystem_ID` INT NOT NULL,
	`Items_ID` int(50) NOT NULL,
	`UserID` int,
    constraint ItemPlacementHistory_PK primary key(ItemPlacementHistoryID)
);

delimiter $$
drop trigger if exists InsertHistoryInsert $$

create trigger InsertHistoryInsert
before insert on Items
for each row
begin
     insert into ItemHistory (TextInfo, timeOfRegistered, DateOfRegistered, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`/*, `UserID`*/) values('New item is now registered', timestamp(current_time()), timestamp(current_date()), new.ItemNumber, new.`Name`, new.`Description`, new.`SerialNumber`, new.`By`, new.`Owner`, new.`amount`/*, `UserID`*/);
end $$
delimiter ;

delimiter $$
drop trigger if exists InsertHistoryupdate $$

create trigger InsertHistoryupdate
before update on Items
for each row
begin
     insert into ItemHistory (TextInfo, timeOfRegistered, DateOfRegistered, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`/*, `UserID`*/) values('Item information has been changed', timestamp(current_time()), timestamp(current_date()), new.ItemNumber, new.`Name`, new.`Description`, new.`SerialNumber`, new.`By`, new.`Owner`, new.`amount`/*, `UserID`*/);
end $$
delimiter ;
/*
delimiter $$
drop trigger if exists InsertHistorydelete $$

create trigger InsertHistorydelete
before delete on Items
for each row
begin
     insert into ItemHistory (TextInfo, timeOfRegistered, DateOfRegistered, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`/*, `UserID`) values('Item has been delete', timestamp(current_time()), timestamp(current_date()), new.ItemNumber, new.`Name`, new.`Description`, new.`SerialNumber`, new.`By`, new.`Owner`, new.`amount`/*, `UserID`);
end $$
delimiter ;
*/
delimiter $$
drop trigger if exists ItemPlacementHistoryInsert $$

create trigger ItemPlacementHistoryInsert
before insert on ItemPlacement
for each row
begin
     insert into ItemPlacementHistory (TextInfo, timeOfRegistered, DateOfRegistered, `Amount` ,`ShelfSystem_ID`,`Items_ID`/*, `UserID`*/) values('Item placed in shelf', timestamp(current_time()), timestamp(current_date()), new.`Amount`, new.`ShelfSystem_ID`, new.`Items_ID`/*, `UserID`*/);
end $$
delimiter ;

delimiter $$
drop trigger if exists ItemPlacementHistoryupdate $$

create trigger ItemPlacementHistoryupdate
before update on ItemPlacement
for each row
begin
     insert into ItemPlacementHistory (TextInfo, timeOfRegistered, DateOfRegistered, `Amount` ,`ShelfSystem_ID`,`Items_ID`/*, `UserID`*/) values('Item has been moved to a different shelf', timestamp(current_time()), timestamp(current_date()), new.`Amount`, new.`ShelfSystem_ID`, new.`Items_ID`/*, `UserID`*/);
end $$
delimiter ;
/*
delimiter $$
drop trigger if exists ItemPlacementHistorydelete $$

create trigger ItemPlacementHistorydelete
before delete on ItemPlacement
for each row
begin
     insert into ItemPlacementHistory (TextInfo, timeOfRegistered, DateOfRegistered, `Amount` ,`ShelfSystem_ID`,`Items_ID`/*, `UserID`) values('Item has been removed from shelf', timestamp(current_time()), timestamp(current_date()), new.`Amount`, new.`ShelfSystem_ID`, new.`Items_ID`/*, `UserID`);
end $$
delimiter ;
*/

/*
delimiter $$
drop trigger if exists SumItems $$

create trigger SumItems
after insert on Items
for each row 
begin
     UPDATE items SET `amount`= `amount` + new.amount WHERE `Name` = new.`Name` and `ItemNumber` = new.`ItemNumber` and `Description` = new.`Description` and `SerialNumber` = new.`SerialNumber` and `By` = new.`By` and `Owner` = new.`Owner`;
     DELETE FROM items WHERE `Name` = new.`Name` and `ItemNumber` = new.`ItemNumber` and `Description` = new.`Description` and `SerialNumber` = new.`SerialNumber` and `By` = new.`By` and `Owner` = new.`Owner`;
end $$
delimiter ;

*/

insert into `Items` (`Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`) values('Mobil Super 3000 XE 5W-30 1L', '3020 151456', 'Syntetísk olía ætluð fyrir bensín- og díselbíla frá GM, BMW og MB, Hentar einnig á aðrar gerðir þar sem gerð er krafa um ACEA C3 flokkun.', '00000000001', 'Mobil','N1',25);
insert into `Items` (`Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`) values('Mobil 1 ESP Formula 5W-30 1L', '3020 437891', 'Leiðandi Smurolía sem er alveg fullkomin fyrir díselbíla. Þróuð með það í huga að bæta getu bensínbíla. Mobil 1 ESP Formula 5W-30 uppfyllir nýjustu flokkanir bílaiðnaðarins ACEA C2/C3 fyrir mótorolíur. ', '00000000002', 'Mobil','N1',15);
insert into `Items` (`Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`) values('Mobil Super 3000 XE 5W-30 1L', '3020 151457', 'Syntetísk olía ætluð fyrir bensín- og díselbíla frá GM, BMW og MB, Hentar einnig á aðrar gerðir þar sem gerð er krafa um ACEA C3 flokkun.', '00000000001', 'Mobil','olis',25);
-- insert into `Items` (`Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`) values('', '', '', '', '','',);
UPDATE Items SET ItemNumber='3020 151457W' WHERE ItemNumber='3020 151457';

insert into `ItemPlacement` (`Amount` ,`ShelfSystem_ID`,`Items_ID`)values(5,1,1);
insert into `ItemPlacement` (`Amount` ,`ShelfSystem_ID`,`Items_ID`)values(20,2,2);
insert into `ItemPlacement` (`Amount` ,`ShelfSystem_ID`,`Items_ID`)values(10,3,2);
insert into `ItemPlacement` (`Amount` ,`ShelfSystem_ID`,`Items_ID`)values(5,3,3);
-- insert into `ItemPlacement` (`Amount` ,`ShelfSystem_ID`,`Items_ItemNumber`)values(,,'');

delimiter $$
drop procedure if exists ItemsSearchItemNumber $$
create procedure ItemsSearchItemNumber(Item_Number char(50))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE ItemNumber = Item_Number;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchSerialNumber $$
create procedure ItemsSearchSerialNumber(Serial_Number char(11))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE SerialNumber = Serial_Number;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchBy $$
create procedure ItemsSearchBy(`S_By` char(80))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE `By` = `S_By`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchOwner $$
create procedure ItemsSearchOwner(`S_Owner` char(80))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE `Owner` = S_Owner;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchItemNumberAndSerialNumber $$
create procedure ItemsSearchItemNumberAndSerialNumber(Item_Number char(50), Serial_Number char(11))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE ItemNumber = Item_Number and SerialNumber = Serial_Number;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchSerialNumberAndBy $$
create procedure ItemsSearchSerialNumberAndBy(Serial_Number char(11), `S_By` char(80))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE SerialNumber = Serial_Number and `By` = `S_By`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchByAndOwner $$
create procedure ItemsSearchByAndOwner(`S_By` char(80), `S_Owner` char(80))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE `By` = `S_By` And `Owner` = S_Owner;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchItemNumberAndBy $$
create procedure ItemsSearchItemNumberAndBy(Item_Number char(50), `S_By` char(80))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE ItemNumber = Item_Number And `By` = `S_By`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchItemNumberAndOwner $$
create procedure ItemsSearchItemNumberAndOwner(Item_Number char(50), `S_Owner` char(80))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE ItemNumber = Item_Number And `Owner` = S_Owner;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchSerialNumberAndOwner $$
create procedure ItemsSearchSerialNumberAndOwner(Serial_Number char(11), `S_Owner` char(80))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE SerialNumber = Serial_Number And `Owner` = S_Owner;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchItemNumberAndSerialNumberAndBy $$
create procedure ItemsSearchItemNumberAndSerialNumberAndBy(Item_Number char(50), Serial_Number char(11), `S_By` char(80))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE ItemNumber = Item_Number and SerialNumber = Serial_Number And `By` = `S_By`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchSerialNumberAndByAndOwner $$
create procedure ItemsSearchSerialNumberAndByAndOwner(Serial_Number char(11), `S_By` char(80), `S_Owner` char(80))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE SerialNumber = Serial_Number and `By` = `S_By` And `Owner` = S_Owner;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchByAndOwnerAndItemNumber $$
create procedure ItemsSearchByAndOwnerAndItemNumber(`S_By` char(80), `S_Owner` char(80), Item_Number char(50))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE `By` = `S_By` And `Owner` = S_Owner and ItemNumber = Item_Number;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchOwnerAndItemNumberAndSerialNumber $$
create procedure ItemsSearchOwnerAndItemNumberAndSerialNumber(`S_Owner` char(80),Item_Number char(50), Serial_Number char(11))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM  Items WHERE `Owner` = S_Owner and ItemNumber = Item_Number and SerialNumber = Serial_Number;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemsSearchItemNumberAndSerialNumberAndByAndOwner $$
create procedure ItemsSearchItemNumberAndSerialNumberAndByAndOwner(Item_Number char(50), Serial_Number char(11), `S_By` char(80), `S_Owner` char(80))
begin
	Select `Name`, `ItemNumber`, `Description`, `SerialNumber`, `By`, `Owner`, `amount` FROM Items WHERE ItemNumber = Item_Number and SerialNumber = Serial_Number And `By` = `S_By` And `Owner` = S_Owner;
end $$
delimiter ;

/*
call ItemsSearchItemNumber('3020 151456');
call ItemsSearchSerialNumber('00000000001');
call ItemsSearchBy('mobil');
call ItemsSearchOwner('N1');
Call ItemsSearchItemNumberAndSerialNumber('3020 151456','00000000001');
Call ItemsSearchSerialNumberAndBy('00000000001','Mobil');
Call ItemsSearchByAndOwner('Mobil','N1');
Call ItemsSearchItemNumberAndBy('3020 151456', 'Mobil');
Call ItemsSearchItemNumberAndOwner('3020 151456', 'N1');
Call ItemsSearchSerialNumberAndOwner('00000000001', 'N1');
Call ItemsSearchItemNumberAndSerialNumberAndBy('3020 151456','00000000001', 'Mobil');
Call ItemsSearchSerialNumberAndByAndOwner('00000000001', 'Mobil', 'N1');
Call ItemsSearchByAndOwnerAndItemNumber('Mobil', 'N1', '3020 151456');
Call ItemsSearchOwnerAndItemNumberAndSerialNumber('N1', '3020 151456', '00000000001');
Call ItemsSearchItemNumberAndSerialNumberAndByAndOwner('3020 151456','00000000001', 'Mobil', 'N1');
*/

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers1 $$
create procedure ItemPlacementHistorySearchtriggers1(Text_Info Varchar(100), Date_Of_Registered date, `s_Amount` INT, `ShelfSystem_ID` INT, `Items_ID` int(50),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`TextInfo` = Text_Info and `DateOfRegistered` = Date_Of_Registered and `Amount` = `s_Amount` and `ShelfSystem_ID` = `ShelfSystem_ID` and `Items_ID` = `Items_ID` and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers2 $$
create procedure ItemPlacementHistorySearchtriggers2(Text_Info Varchar(100), Date_Of_Registered date, `s_Amount` INT, `ShelfSystem_ID` INT, `Items_ID` int(50))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`TextInfo` = Text_Info and `DateOfRegistered` = Date_Of_Registered and `Amount` = `s_Amount` and `ShelfSystem_ID` = `ShelfSystem_ID` and `Items_ID` = `Items_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers3 $$
create procedure ItemPlacementHistorySearchtriggers3(Date_Of_Registered date, `s_Amount` INT, `ShelfSystem_ID` INT, `Items_ID` int(50),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `Amount` = `s_Amount` and `ShelfSystem_ID` = `ShelfSystem_ID` and `Items_ID` = `Items_ID` and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers4 $$
create procedure ItemPlacementHistorySearchtriggers4(Text_Info Varchar(100), `s_Amount` INT, `ShelfSystem_ID` INT, `Items_ID` int(50),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`TextInfo` = Text_Info and `Amount` = `s_Amount` and `ShelfSystem_ID` = `ShelfSystem_ID` and `Items_ID` = `Items_ID` and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers5 $$
create procedure ItemPlacementHistorySearchtriggers5(Text_Info Varchar(100), Date_Of_Registered date, `ShelfSystem_ID` INT, `Items_ID` int(50),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`TextInfo` = Text_Info and `DateOfRegistered` = Date_Of_Registered and `ShelfSystem_ID` = `ShelfSystem_ID` and `Items_ID` = `Items_ID` and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers6 $$
create procedure ItemPlacementHistorySearchtriggers6(Text_Info Varchar(100), Date_Of_Registered date, `s_Amount` INT, `Items_ID` int(50),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`TextInfo` = Text_Info and `DateOfRegistered` = Date_Of_Registered and `Amount` = `s_Amount` and `Items_ID` = `Items_ID` and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers7 $$
create procedure ItemPlacementHistorySearchtriggers7(Text_Info Varchar(100), Date_Of_Registered date, `s_Amount` INT, `ShelfSystem_ID` INT,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`TextInfo` = Text_Info and `DateOfRegistered` = Date_Of_Registered and `Amount` = `s_Amount` and `ShelfSystem_ID` = `ShelfSystem_ID` and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers8 $$
create procedure ItemPlacementHistorySearchtriggers8(Text_Info Varchar(100), Date_Of_Registered date, `s_Amount` INT, `ShelfSystem_ID` INT)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`TextInfo` = Text_Info and `DateOfRegistered` = Date_Of_Registered and `Amount` = `s_Amount` and `ShelfSystem_ID` = `ShelfSystem_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers9 $$
create procedure ItemPlacementHistorySearchtriggers9(Date_Of_Registered date, `s_Amount` INT, `ShelfSystem_ID` INT, `Items_ID` int(50))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `Amount` = `s_Amount` and `ShelfSystem_ID` = `ShelfSystem_ID` and `Items_ID` = `Items_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers10 $$
create procedure ItemPlacementHistorySearchtriggers10(`s_Amount` INT, `ShelfSystem_ID` INT, `Items_ID` int(50),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`Amount` = `s_Amount` and `ShelfSystem_ID` = `ShelfSystem_ID` and `Items_ID` = `Items_ID` and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers11 $$
create procedure ItemPlacementHistorySearchtriggers11(Text_Info Varchar(100), `ShelfSystem_ID` INT, `Items_ID` int(50),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`TextInfo` = Text_Info and `ShelfSystem_ID` = `ShelfSystem_ID` and `Items_ID` = `Items_ID` and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers12 $$
create procedure ItemPlacementHistorySearchtriggers12(Text_Info Varchar(100), Date_Of_Registered date, `Items_ID` int(50),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`TextInfo` = Text_Info and `DateOfRegistered` = Date_Of_Registered and `Items_ID` = `Items_ID` and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers13 $$
create procedure ItemPlacementHistorySearchtriggers13(Text_Info Varchar(100), Date_Of_Registered date, `s_Amount` INT, `UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`TextInfo` = Text_Info and `DateOfRegistered` = Date_Of_Registered and `Amount` = `s_Amount` and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers14 $$
create procedure ItemPlacementHistorySearchtriggers14(Text_Info Varchar(100), Date_Of_Registered date, `s_Amount` INT)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `TextInfo` = Text_Info and `DateOfRegistered` = Date_Of_Registered and `Amount` = `s_Amount`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers15 $$
create procedure ItemPlacementHistorySearchtriggers15(Date_Of_Registered date, `s_Amount` INT, `ShelfSystem_ID` INT)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `DateOfRegistered` = Date_Of_Registered and `Amount` = `s_Amount` and `ShelfSystem_ID` = `ShelfSystem_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers16 $$
create procedure ItemPlacementHistorySearchtriggers16(`s_Amount` INT, `ShelfSystem_ID` INT, `Items_ID` int(50))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `Amount` = `s_Amount` and `ShelfSystem_ID` = `ShelfSystem_ID` and `Items_ID` = `Items_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers17 $$
create procedure ItemPlacementHistorySearchtriggers17(`ShelfSystem_ID` INT, `Items_ID` int(50),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `ShelfSystem_ID` = `ShelfSystem_ID` and `Items_ID` = `Items_ID` and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers18 $$
create procedure ItemPlacementHistorySearchtriggers18(Text_Info Varchar(100), `Items_ID` int(50),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`TextInfo` = Text_Info and `Items_ID` = `Items_ID` and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers19 $$
create procedure ItemPlacementHistorySearchtriggers19(Text_Info Varchar(100), Date_Of_Registered date,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`TextInfo` = Text_Info and `DateOfRegistered` = Date_Of_Registered and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers20 $$
create procedure ItemPlacementHistorySearchtriggers20(Text_Info Varchar(100), Date_Of_Registered date)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `TextInfo` = Text_Info and `DateOfRegistered` = Date_Of_Registered;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers21 $$
create procedure ItemPlacementHistorySearchtriggers21(Date_Of_Registered date, `s_Amount` INT)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `DateOfRegistered` = Date_Of_Registered and `Amount` = `s_Amount`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers22 $$
create procedure ItemPlacementHistorySearchtriggers22(`s_Amount` INT, `ShelfSystem_ID` INT)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `Amount` = `s_Amount` and `ShelfSystem_ID` = `ShelfSystem_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers23 $$
create procedure ItemPlacementHistorySearchtriggers23(`ShelfSystem_ID` INT, `Items_ID` int(50))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `ShelfSystem_ID` = `ShelfSystem_ID` and `Items_ID` = `Items_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers24 $$
create procedure ItemPlacementHistorySearchtriggers24(`Items_ID` int(50),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `Items_ID` = `Items_ID` and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers25 $$
create procedure ItemPlacementHistorySearchtriggers25(Text_Info Varchar(100), `UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE`TextInfo` = Text_Info and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers26 $$
create procedure ItemPlacementHistorySearchtriggers26(Text_Info Varchar(100))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `TextInfo` = Text_Info;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers27 $$
create procedure ItemPlacementHistorySearchtriggers27(Date_Of_Registered date)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `DateOfRegistered` = Date_Of_Registered;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers28 $$
create procedure ItemPlacementHistorySearchtriggers28(`s_Amount` INT)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `Amount` = `s_Amount`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers29 $$
create procedure ItemPlacementHistorySearchtriggers29(`ShelfSystem_ID` INT)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `ShelfSystem_ID` = `ShelfSystem_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers30 $$
create procedure ItemPlacementHistorySearchtriggers30(`Items_ID` int(50))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `Items_ID` = `Items_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemPlacementHistorySearchtriggers31 $$
create procedure ItemPlacementHistorySearchtriggers31(`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `Amount`, `ShelfSystem_ID`, `Items_ID`, `UserID` 
    FROM ItemPlacementHistory 
    WHERE `UserID` = `User_ID`;
end $$
delimiter ;

/*
-- call ItemPlacementHistorySearchtriggers1('Item placed in shelf','2016-12-03',5,1,1,);
call ItemPlacementHistorySearchtriggers2('Item placed in shelf','2016-12-03',5,1,1);
-- call ItemPlacementHistorySearchtriggers3('2016-12-03',5,1,1,);
-- call ItemPlacementHistorySearchtriggers4('Item placed in shelf',5,1,1,);
-- call ItemPlacementHistorySearchtriggers5('Item placed in shelf','2016-12-03',1,1,);
-- call ItemPlacementHistorySearchtriggers6('Item placed in shelf','2016-12-03',5,1,);
-- call ItemPlacementHistorySearchtriggers7('Item placed in shelf','2016-12-03',5,1,);
call ItemPlacementHistorySearchtriggers8('Item placed in shelf','2016-12-03',5,1);
call ItemPlacementHistorySearchtriggers9('2016-12-03',5,1,1);
-- call ItemPlacementHistorySearchtriggers10(5,1,1,);
-- call ItemPlacementHistorySearchtriggers11('Item placed in shelf',1,1,);
-- call ItemPlacementHistorySearchtriggers12('Item placed in shelf','2016-12-03',1,);
-- call ItemPlacementHistorySearchtriggers13('Item placed in shelf','2016-12-03',5,);
call ItemPlacementHistorySearchtriggers14('Item placed in shelf','2016-12-03',5);
call ItemPlacementHistorySearchtriggers15('2016-12-03',5,1);
call ItemPlacementHistorySearchtriggers16(5,1,1);
-- call ItemPlacementHistorySearchtriggers17(1,1,);
-- call ItemPlacementHistorySearchtriggers18('Item placed in shelf',1,);
-- call ItemPlacementHistorySearchtriggers19('Item placed in shelf','2016-12-03',);
call ItemPlacementHistorySearchtriggers20('Item placed in shelf','2016-12-03');
call ItemPlacementHistorySearchtriggers21('2016-12-03',5);
call ItemPlacementHistorySearchtriggers22(5,1);
call ItemPlacementHistorySearchtriggers23(1,1);
-- call ItemPlacementHistorySearchtriggers24(1,);
-- call ItemPlacementHistorySearchtriggers25('Item placed in shelf',);
call ItemPlacementHistorySearchtriggers26('Item placed in shelf');
call ItemPlacementHistorySearchtriggers27('2016-12-03');
call ItemPlacementHistorySearchtriggers28(5);
call ItemPlacementHistorySearchtriggers29(1);
call ItemPlacementHistorySearchtriggers30(1);
-- call ItemPlacementHistorySearchtriggers31();
*/


delimiter $$
drop procedure if exists ItemHistorySearchtriggers01 $$
create procedure ItemHistorySearchtriggers01(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers02 $$
create procedure ItemHistorySearchtriggers02(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers03 $$
create procedure ItemHistorySearchtriggers03(Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers04 $$
create procedure ItemHistorySearchtriggers04(Date_Of_Registered date, s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers05 $$
create procedure ItemHistorySearchtriggers05(Date_Of_Registered date, Item_Number char(50),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers06 $$
create procedure ItemHistorySearchtriggers06(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers07 $$
create procedure ItemHistorySearchtriggers07(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers08 $$
create procedure ItemHistorySearchtriggers08(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers09 $$
create procedure ItemHistorySearchtriggers09(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers10 $$
create procedure ItemHistorySearchtriggers10(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers11 $$
create procedure ItemHistorySearchtriggers11(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers12 $$
create procedure ItemHistorySearchtriggers12(Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers13 $$
create procedure ItemHistorySearchtriggers13(s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers14 $$
create procedure ItemHistorySearchtriggers14(Date_Of_Registered date,Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers15 $$
create procedure ItemHistorySearchtriggers15(Date_Of_Registered date, Item_Number char(50),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers16 $$
create procedure ItemHistorySearchtriggers16(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers17 $$
create procedure ItemHistorySearchtriggers17(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers18 $$
create procedure ItemHistorySearchtriggers18(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers19 $$
create procedure ItemHistorySearchtriggers19(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers20 $$
create procedure ItemHistorySearchtriggers20(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers21 $$
create procedure ItemHistorySearchtriggers21(Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers22 $$
create procedure ItemHistorySearchtriggers22(s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers23 $$
create procedure ItemHistorySearchtriggers23(Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers24 $$
create procedure ItemHistorySearchtriggers24(Date_Of_Registered date, Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers25 $$
create procedure ItemHistorySearchtriggers25(Date_Of_Registered date, Item_Number char(50), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers26 $$
create procedure ItemHistorySearchtriggers26(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers27 $$
create procedure ItemHistorySearchtriggers27(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers28 $$
create procedure ItemHistorySearchtriggers28(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers29 $$
create procedure ItemHistorySearchtriggers29(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers30 $$
create procedure ItemHistorySearchtriggers30(Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers31 $$
create procedure ItemHistorySearchtriggers31(s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers32 $$
create procedure ItemHistorySearchtriggers32(Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers33 $$
create procedure ItemHistorySearchtriggers33(Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers34 $$
create procedure ItemHistorySearchtriggers34(Date_Of_Registered date, s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers35 $$
create procedure ItemHistorySearchtriggers35(Date_Of_Registered date, Item_Number char(50), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers36 $$
create procedure ItemHistorySearchtriggers36(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers37 $$
create procedure ItemHistorySearchtriggers37(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers38 $$
create procedure ItemHistorySearchtriggers38(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers39 $$
create procedure ItemHistorySearchtriggers39(Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers40 $$
create procedure ItemHistorySearchtriggers40(s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers41 $$
create procedure ItemHistorySearchtriggers41(Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers42 $$
create procedure ItemHistorySearchtriggers42(Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80), s_amount int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner and `amount` = s_amount;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers43 $$
create procedure ItemHistorySearchtriggers43(s_By CHAR(80), s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE `By` = s_By and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers44 $$
create procedure ItemHistorySearchtriggers44(Date_Of_Registered date, s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers45 $$
create procedure ItemHistorySearchtriggers45(Date_Of_Registered date, Item_Number char(50), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers46 $$
create procedure ItemHistorySearchtriggers46(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers47 $$
create procedure ItemHistorySearchtriggers47(Date_Of_Registered date, Item_Number char(50), s_Name CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `Name` = s_Name;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers48 $$
create procedure ItemHistorySearchtriggers48(Item_Number char(50), s_Name CHAR(80),Text_Info Varchar(100))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`ItemNumber` = Item_Number and `Name` = s_Name and `TextInfo` = Text_Info;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers49 $$
create procedure ItemHistorySearchtriggers49(s_Name CHAR(80),Text_Info Varchar(100),  Serial_Number CHAR(11))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE `Name` = s_Name and `TextInfo` = Text_Info and `SerialNumber` = Serial_Number;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers50 $$
create procedure ItemHistorySearchtriggers50(Text_Info Varchar(100),  Serial_Number CHAR(11), s_By CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`TextInfo` = Text_Info and `SerialNumber` = Serial_Number and `By` = s_By ;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers51 $$
create procedure ItemHistorySearchtriggers51(Serial_Number CHAR(11), s_By CHAR(80), s_Owner CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`SerialNumber` = Serial_Number and `By` = s_By and `Owner` = s_Owner;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers52 $$
create procedure ItemHistorySearchtriggers52(s_By CHAR(80), s_Owner CHAR(80), s_amount int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE `By` = s_By and `Owner` = s_Owner and `amount` = s_amount;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers53 $$
create procedure ItemHistorySearchtriggers53(s_Owner CHAR(80), s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`Owner` = s_Owner and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers54 $$
create procedure ItemHistorySearchtriggers54(Date_Of_Registered date, s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers55 $$
create procedure ItemHistorySearchtriggers55(Date_Of_Registered date, Item_Number char(50),`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers56 $$
create procedure ItemHistorySearchtriggers56(Date_Of_Registered date, Item_Number char(50))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `ItemNumber` = Item_Number;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers57 $$
create procedure ItemHistorySearchtriggers57(Item_Number char(50), s_Name CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`ItemNumber` = Item_Number and `Name` = s_Name ;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers58 $$
create procedure ItemHistorySearchtriggers58(s_Name CHAR(80),Text_Info Varchar(100))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE `Name` = s_Name and `TextInfo` = Text_Info;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers59 $$
create procedure ItemHistorySearchtriggers59(Text_Info Varchar(100),  Serial_Number CHAR(11))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`TextInfo` = Text_Info and `SerialNumber` = Serial_Number;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers60 $$
create procedure ItemHistorySearchtriggers60(Serial_Number CHAR(11), s_By CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`SerialNumber` = Serial_Number and `By` = s_By;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers61 $$
create procedure ItemHistorySearchtriggers61(s_By CHAR(80), s_Owner CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE `By` = s_By and `Owner` = s_Owner;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers62 $$
create procedure ItemHistorySearchtriggers62(s_Owner CHAR(80), s_amount int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`Owner` = s_Owner and `amount` = s_amount ;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers63 $$
create procedure ItemHistorySearchtriggers63(s_amount int,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`amount` = s_amount and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers64 $$
create procedure ItemHistorySearchtriggers64(Date_Of_Registered date,`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered and `UserID` = `User_ID`;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers65 $$
create procedure ItemHistorySearchtriggers65(Date_Of_Registered date)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`DateOfRegistered` = Date_Of_Registered;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers66 $$
create procedure ItemHistorySearchtriggers66(Item_Number char(50))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`ItemNumber` = Item_Number;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers67 $$
create procedure ItemHistorySearchtriggers67(s_Name CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE `Name` = s_Name;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers68 $$
create procedure ItemHistorySearchtriggers68(Text_Info Varchar(100))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`TextInfo` = Text_Info;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers69 $$
create procedure ItemHistorySearchtriggers69(Serial_Number CHAR(11))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`SerialNumber` = Serial_Number;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers70 $$
create procedure ItemHistorySearchtriggers70(s_By CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE `By` = s_By;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers71 $$
create procedure ItemHistorySearchtriggers71(s_Owner CHAR(80))
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`Owner` = s_Owner;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers72 $$
create procedure ItemHistorySearchtriggers72(s_amount int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE`amount` = s_amount;
end $$
delimiter ;

delimiter $$
drop procedure if exists ItemHistorySearchtriggers73 $$
create procedure ItemHistorySearchtriggers73(`UserID` int)
begin
	Select `TextInfo`, `timeOfRegistered`, `DateOfRegistered`, `ItemNumber`, `Name`, `Description`, `SerialNumber`, `By`, `Owner`, `amount`, `UserID`
    FROM ItemHistory 
    WHERE `UserID` = `User_ID`;
end $$
delimiter ;
/*
-- call ItemHistorySearchtriggers01('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil','N1', 25,);

call ItemHistorySearchtriggers02('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil','N1', 25);
-- call ItemHistorySearchtriggers03('3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers04('2016-12-04', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers05('2016-12-04', '3020 151456', 'New item is now registered', '00000000001','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers06('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', '00000000001','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers07('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers08('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','N1', 25,);
-- call ItemHistorySearchtriggers09('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil', 25,);
-- call ItemHistorySearchtriggers10('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil','N1',);

call ItemHistorySearchtriggers11('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil','N1');
call ItemHistorySearchtriggers12('3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil','N1', 25);
-- call ItemHistorySearchtriggers13('Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers14('2016-12-04', 'New item is now registered', '00000000001','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers15('2016-12-04', '3020 151456', '00000000001','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers16('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers17('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered','N1', 25,);
-- call ItemHistorySearchtriggers18('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001', 25,);
-- call ItemHistorySearchtriggers19('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil',);

call ItemHistorySearchtriggers20('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil');
call ItemHistorySearchtriggers21('3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil','N1');
call ItemHistorySearchtriggers22('Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil','N1', 25);
-- call ItemHistorySearchtriggers23('New item is now registered', '00000000001','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers24('2016-12-04', '00000000001','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers25('2016-12-04', '3020 151456','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers26('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L','N1', 25,);
-- call ItemHistorySearchtriggers27('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', 25,);
-- call ItemHistorySearchtriggers28('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001',);

call ItemHistorySearchtriggers29('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001');
call ItemHistorySearchtriggers30('3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil');
call ItemHistorySearchtriggers31('Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil','N1');
call ItemHistorySearchtriggers32('New item is now registered', '00000000001','Mobil','N1', 25);
-- call ItemHistorySearchtriggers33('00000000001','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers34('2016-12-04','Mobil','N1', 25,);
-- call ItemHistorySearchtriggers35('2016-12-04', '3020 151456', 'N1', 25,);
-- call ItemHistorySearchtriggers36('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 25,);
-- call ItemHistorySearchtriggers37('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered',);

call ItemHistorySearchtriggers38('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered');
call ItemHistorySearchtriggers39('3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001');
call ItemHistorySearchtriggers40('Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001','Mobil');
call ItemHistorySearchtriggers41('New item is now registered', '00000000001','Mobil','N1');
call ItemHistorySearchtriggers42('00000000001','Mobil','N1', 25);
-- call ItemHistorySearchtriggers43('Mobil','N1', 25,);
-- call ItemHistorySearchtriggers44('2016-12-04','N1', 25,);
-- call ItemHistorySearchtriggers45('2016-12-04', '3020 151456', 25,);
-- call ItemHistorySearchtriggers46('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L',);

call ItemHistorySearchtriggers47('2016-12-04', '3020 151456', 'Mobil Super 3000 XE 5W-30 1L');
call ItemHistorySearchtriggers48('3020 151456', 'Mobil Super 3000 XE 5W-30 1L', 'New item is now registered');
call ItemHistorySearchtriggers49('Mobil Super 3000 XE 5W-30 1L', 'New item is now registered', '00000000001');
call ItemHistorySearchtriggers50('New item is now registered', '00000000001','Mobil');
call ItemHistorySearchtriggers51('00000000001','Mobil','N1');
call ItemHistorySearchtriggers52('Mobil','N1', 25);
-- call ItemHistorySearchtriggers53('N1', 25,);
-- call ItemHistorySearchtriggers54('2016-12-04', 25,);
-- call ItemHistorySearchtriggers55('2016-12-04', '3020 151456',);

call ItemHistorySearchtriggers56('2016-12-04', '3020 151456');
call ItemHistorySearchtriggers57('3020 151456', 'Mobil Super 3000 XE 5W-30 1L');
call ItemHistorySearchtriggers58('Mobil Super 3000 XE 5W-30 1L', 'New item is now registered');
call ItemHistorySearchtriggers59('New item is now registered', '00000000001');
call ItemHistorySearchtriggers60('00000000001','Mobil');
call ItemHistorySearchtriggers61('Mobil','N1');
call ItemHistorySearchtriggers62('N1', 25);
-- call ItemHistorySearchtriggers63(25,);
-- call ItemHistorySearchtriggers64('2016-12-04',);

call ItemHistorySearchtriggers65('2016-12-04');
call ItemHistorySearchtriggers66('3020 151456');
call ItemHistorySearchtriggers67('Mobil Super 3000 XE 5W-30 1L');
call ItemHistorySearchtriggers68('New item is now registered');
call ItemHistorySearchtriggers69('00000000001');
call ItemHistorySearchtriggers70('Mobil');
call ItemHistorySearchtriggers71('N1');
call ItemHistorySearchtriggers72(25);
-- call ItemHistorySearchtriggers73();
*/
